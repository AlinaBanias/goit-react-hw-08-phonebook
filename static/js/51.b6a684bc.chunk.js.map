{"version":3,"file":"static/js/51.b6a684bc.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","Hooks/useInput.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n\n  span {\n    color: red;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: space-around;\n  width: 150px;\n  font-size: 20px;\n`;","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Label } from './ContactForm.styled';\nimport styled from '@emotion/styled';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport PropTypes from 'prop-types';\nimport { useAddContactMutation } from 'redux/contactsApi';\nimport { toast } from 'react-toastify';\nimport { Oval } from 'react-loader-spinner';\nimport Button from '@mui/material/Button';\n\nconst Input = styled(Field)`\n  max-width: 100%;\n  margin-left: auto;\n  font-size: 20px;\n`;\n\nconst ConttForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: 350px;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nconst initialValues = { name: '', number: '' };\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst phoneRegExp =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nlet SignupSchema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .matches(\n      phoneRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst ContactForm = ({ contacts }) => {\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    if (checkContactName(values.name)) {\n      toast.error('This contact is already exist', {\n        position: 'top-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'colored',\n      });\n      return;\n    }\n    await addContact(values).unwrap().then(() => {\n        toast.success('Contact is added to your phonebook', {\n            position: 'top-center',\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'colored',\n          });\n          resetForm();\n    })\n    .catch (() => {\n        console.error(\"Error!\");\n    });\n   \n  };\n\n  const checkContactName = name => {\n    return contacts.find(contact => contact.name === name);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={SignupSchema}\n    >\n      <ConttForm autoComplete=\"off\">\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </Label>\n\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </Label>\n\n        <Button\n          type=\"submit\"\n          disabled={isLoading}\n          variant=\"contained\"\n          sx={{\n            height: 40,\n            width: 200,\n            ':hover': { backgroundColor: 'green' },\n          }}\n        >\n          {isLoading && (\n            <Oval\n              height={15}\n              width={15}\n              color=\"rgb(25, 0, 185)\"\n              wrapperStyle={{}}\n              wrapperClass=\"\"\n              visible={true}\n              ariaLabel=\"oval-loading\"\n              secondaryColor=\"#4fa94d\"\n              strokeWidth={2}\n              strokeWidthSecondary={2}\n            />\n          )}\n          Add contact\n        </Button>\n      </ConttForm>\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;","import styled from '@emotion/styled';\n\nexport const ContItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  margin-left: auto;\n  justify-content: space-around;\n  width: 100px;\n  font-size: 20px;\n`;\n\nexport const Name = styled.span`\n  color: #37474f;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const Phone = styled.span`\n  color: #37474f;\n  font-size: 20px;\n  font-weight: 500;\n`;","import { Name, Phone } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contactsApi';\nimport { Oval } from 'react-loader-spinner';\n// import ListItem from '@mui/material/ListItem';\n// import styled from '@emotion/styled';\nimport Avatar from '@mui/material/Avatar';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\n\n// =====================\nimport Button from '@mui/material/Button';\n\n// const ContItem = styled(ListItem)`\n//   gap: 10px;\n//   font-size: 25px;\n// `;\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  return color;\n}\n\nfunction stringAvatar(name) {\n  if (name.split(' ').length > 1)\n    return {\n      sx: {\n        bgcolor: stringToColor(name),\n      },\n      children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\n    };\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.split(' ')[0][0]}`,\n  };\n}\n\nconst ContactItem = ({ name, number, id }) => {\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const handleButtonClick = async id => {\n    await deleteContact(id).unwrap().then(() => {\n        toast.info('Contact deleted', {\n            position: 'top-center',\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'colored',\n          });\n    })\n    .catch(() => {\n        console.error(\"Error!\");\n    });\n   \n  };\n\n  return (\n    <Box\n      component=\"li\"\n      sx={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: '5px',\n        alignItems: 'center',\n        borderBottomStyle: 'groove',\n      }}\n    >\n      <Stack\n        spacing={2}\n        direction=\"row\"\n        sx={{\n          display: 'flex',\n\n          alignItems: 'center',\n        }}\n      >\n        <Avatar {...stringAvatar(name)} />\n        <Name>{name}:</Name>\n        <Phone>{number}</Phone>\n      </Stack>\n\n      <Stack spacing={2} direction=\"row\">\n        <Button\n          type=\"button\"\n          onClick={() => {\n            navigate(`/goit-react-hw-08-phonebook/contacts/edit/${id}`);\n          }}\n          disabled={isLoading}\n          variant=\"contained\"\n          sx={{\n            height: 30,\n            width: 100,\n            ':hover': { backgroundColor: 'green' },\n          }}\n        >\n          {isLoading && (\n            <Oval\n              height={15}\n              width={15}\n              color=\"rgb(25, 0, 185)\"\n              wrapperStyle={{}}\n              wrapperClass=\"\"\n              visible={true}\n              ariaLabel=\"oval-loading\"\n              secondaryColor=\"#4fa94d\"\n              strokeWidth={2}\n              strokeWidthSecondary={2}\n            />\n          )}\n          Edit\n        </Button>\n\n        <Button\n          type=\"button\"\n          onClick={() => handleButtonClick(id)}\n          disabled={isLoading}\n          variant=\"contained\"\n          sx={{\n            height: 30,\n            width: 100,\n            backgroundColor: 'orange',\n\n            ':hover': { backgroundColor: 'red' },\n          }}\n        >\n          {isLoading && (\n            <Oval\n              height={15}\n              width={15}\n              color=\"rgb(25, 0, 185)\"\n              wrapperStyle={{}}\n              wrapperClass=\"\"\n              visible={true}\n              ariaLabel=\"oval-loading\"\n              secondaryColor=\"#4fa94d\"\n              strokeWidth={2}\n              strokeWidthSecondary={2}\n            />\n          )}\n          Delete\n        </Button>\n      </Stack>\n    </Box>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default ContactItem;","import ContactItem from 'components/ContactItem';\n// import { ContList } from './ContactList.styled';\nimport PropTypes from 'prop-types';\n\nimport List from '@mui/material/List';\n\n// const ConttList = styled(List)`\n//   gap: 10px;\n//   display: flex;\n//   flex-direction: column;\n// `;\n\nconst ContactList = ({ contacts }) => {\n  return (\n    // <Box sx={{ width: '100%' }}>\n    <List\n      sx={{\n        width: '100%',\n        maxWidth: '1200px',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '5px',\n      }}\n    >\n      {/* <Stack spacing={2}> */}\n      {contacts.map(({ id, name, number }) => {\n        return <ContactItem key={id} id={id} name={name} number={number} />;\n      })}\n      {/* </Stack> */}\n    </List>\n    // </Box>\n  );\n};\n\nContactList.propTypes = {\n  visibleContats: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  font-size: 25px;\n`;\n\nexport const FilterInput = styled.input`\n  margin-left: 10px;\n  width: 275px;\n  height: 30px;\n  font-size: 20px;\n`;","import { FilterLabel, FilterInput } from './Filter.styled';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onInputChange }) => {\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        onChange={onInputChange}\n        value={value}\n      />\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onInputChange: PropTypes.func,\n};\n\nexport default Filter;","import styled from '@emotion/styled';\n\nexport const ContactsTitle = styled.h2`\n  font-size: 30px;\n`;\n\nexport const Container = styled.div`\n  padding: 20px;\n  max-width: 600px;\n`;","import { filterChange } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nconst useInput = () => {\n  const dispatch = useDispatch();\n\n  const onInputChange = e => {\n    dispatch(filterChange(e.target.value));\n  };\n\n  return { onInputChange };\n};\n\nexport default useInput;","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { ContactsTitle } from './Contacts.styled';\nimport Container from '@mui/material/Container';\nimport { ThreeDots } from 'react-loader-spinner';\nimport useInput from 'Hooks/useInput';\nimport { Outlet } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\nimport { getFilterValue } from 'redux/filterSlice';\nimport { useGetContactsQuery } from 'redux/contactsApi';\n\nconst Contacts = () => {\n  const input = useInput('');\n  const filterValue = useSelector(getFilterValue);\n\n  const { data: contacts = [], error, isFetching } = useGetContactsQuery();\n\n  const getVisibleContacts = normalizedFilter => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const normalizedFilter = filterValue.toLocaleLowerCase();\n  const visibleContats = getVisibleContacts(normalizedFilter);\n  return (\n    <Container maxWidth=\"md\">\n      <h1>Phonebook</h1>\n      <ContactForm contacts={contacts} />\n      <ContactsTitle>Contacts</ContactsTitle>\n      <Filter {...input} />\n      {isFetching ? (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"#0000ff\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      ) : (\n        <ContactList contacts={visibleContats} />\n      )}\n      {error && <h3>Something went wrong</h3>}\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default Contacts;"],"names":["Label","styled","Input","Field","ConttForm","Form","initialValues","name","number","SignupSchema","yup","shape","trim","matches","required","contacts","useAddContactMutation","addContact","isLoading","handleSubmit","values","resetForm","checkContactName","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","unwrap","then","catch","console","error","find","contact","onSubmit","validationSchema","autoComplete","type","component","disabled","variant","sx","height","width","backgroundColor","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","Name","Phone","stringToColor","string","i","hash","length","charCodeAt","toString","slice","stringAvatar","split","bgcolor","children","id","navigate","useNavigate","useDeleteContactMutation","deleteContact","handleButtonClick","Box","display","justifyContent","padding","alignItems","borderBottomStyle","Stack","spacing","direction","Avatar","onClick","List","maxWidth","flexDirection","gap","map","FilterLabel","FilterInput","value","onInputChange","onChange","ContactsTitle","dispatch","useDispatch","e","filterChange","target","input","useInput","filterValue","useSelector","getFilterValue","useGetContactsQuery","data","isFetching","visibleContats","normalizedFilter","filter","toLocaleLowerCase","includes","getVisibleContacts","radius","wrapperClassName"],"sourceRoot":""}